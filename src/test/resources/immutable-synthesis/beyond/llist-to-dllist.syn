should be able to convert a signly-linked list to a double-linked list
currently fails because this requires allocation before call (or open);
can be fixed by interleaving phases or moving alloc to an earlier phase

TODO can also implement fine-grained immutability
#######

{  s =i {v} ++  s1 ; f :-> x ** lseg(x, s1)[mut, mut, mut, mut] }
void sll_to_dll(loc f)
{ true ;  f :-> i ** dllseg(i, z, s)[mut, mut, mut, mut]}

#######

void sll_to_dll (loc f) {
  let x2 = *f;
  if (x2 == 0) {
  } else {
    let v2 = *x2;
    let nxt2 = *(x2 + 1);
    *f = nxt2;
    sll_to_dll(f);
    let i12 = *f;
    *(x2 + 1) = i12;
    let i2 = malloc(3);
    *(i2 + 1) = i12;
    set_prev(i12, i2);
    free(x2);
    *i2 = v2;
    *f = i2;
  }

}

{ true; (prev + 1) :-> x ** dllseg(x, z, s)[imm, imm, imm, mut] }
void set_prev(loc x, loc prev)
{ true; (prev + 1) :-> x ** dllseg(x, prev, s)[abs, abs, abs, mut]}
