Step 7:
Add a head to a list



TODO which parts to make immuable
#####

{ len == 1 + len1  /\  0 <= len1 ;
   [x, 2] ** x :-> v ** (x + 1) :-> nxt ** lseg(nxt, 0, len1)[imm, imm, imm] **
   r :-> t3 **
   lseg(t3, 0, len1)[imm, imm, imm]}

void list_copy(loc r, int v, loc t3)

{true; r :-> Y ** lseg(Y, 0, len) **
       [x, 2] ** x :-> w ** (x + 1) :-> nxt1 ** lseg(nxt1, 0, len3)[abs, abs, abs] }

#####


{true; r :-> Y ** lseg(Y, 0, len) **
       [x, 2] ** x :-> w ** (x + 1) :-> nxt1 ** lseg(nxt1, 0, len3)[abs, abs, abs] }

void list_copy (loc r, int v, loc t3) {
  let Y2 = malloc(2);
  *r = Y2;
  *(Y2 + 1) = t3;
}