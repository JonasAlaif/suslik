binary search tree: rotate left

#####

{ not (r == 0) /\ sz == 1 + sz1 + sz2  /\  0 <= sz1 /\  0 <= sz2  /\  0 <= v /\ v <= 7 /\ hi1 <= v /\ v <= lo2 ;
  ret :-> a ** [x, 3] ** x :-> v ** (x + 1) :-> l ** (x + 2) :-> r ** bst(l, sz1, lo1, hi1)[I@a, M, M, M] ** bst(r, sz2, lo2, hi2)[I@b, M, M, M] }
void bst_left_rotate (loc x, loc ret)
{ sz3 + sz4 == sz1 + sz2 /\ sz == 1 + sz1 + sz2  /\  0 <= sz3 /\  0 <= sz4  /\  0 <= v3 /\ v3 <= 7 /\ hi3 <= v3 /\ v3 <= lo4 ;
  ret :-> y ** [y, 3] ** y :-> v3 ** (y + 1) :-> x ** (y + 2) :-> r3 ** bst(x, sz3, lo3, hi3)[I@a, M, M, M] ** bst(r3, sz4, lo4, hi4)[I@b, M, M, M] }

#####

void bst_left_rotate (loc x, loc ret) {
  let r2 = *(x + 2);
  let l12 = *(r2 + 1);
  *ret = r2;
  *(x + 2) = l12;
  *(r2 + 1) = x;
}

Successfully synthesised in 17180 milliseconds:
Number of backtrackings 16359
Lasting successful rule applications: 40
Total successful rule applications: 7981
Final size of SMT cache: 1840
Number of saved negative results: 6909
Number of saved positive results: 40
Number of recalled negative results: 1963
Number of recalled positive results: 0

