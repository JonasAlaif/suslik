predicate lseg(loc x, loc y, set s) {
|  x == y        => { s =i {} ; emp }
|  not (x == y)  => { s =i {v} ++ s1 ; [[x, 2]]@0 ** [x :-> v]@1 ** [(x + 1) :-> nxt]@2 ** lseg(nxt, y, s1)[0,1,2] }
}


predicate lsegN(loc x, loc y, int len) {
|  x == y        => { len == 0  ; emp }
|  not (x == y)  => { len == 1 + len1  /\  0 <= len1 ;
                      [[x, 2]]@0 ** [x :-> v]@1 ** [(x + 1) :-> nxt]@2 ** lsegN(nxt, y, len1)[0,1,2] }
}

predicate lsegS(loc x, loc y, set s) {
|  x == y        => { s =i {} ; emp }
|  not (x == y)  => { s =i {v} ++ s1 ;
                      [[x, 2]]@0 ** [x :-> v]@1 ** [(x + 1) :-> nxt]@2 ** lsegS(nxt, y, s1)[0,1,2] }
}

predicate lsegNS(loc x, loc y, int len, set s) {
|  x == y        => { s =i {} /\ len == 0 ; emp }
|  not (x == y)  => { len == 1 + len1  /\  0 <= len1  /\ s =i {v} ++ s1 ;
                      [[x, 2]]@0 ** [x :-> v]@1 ** [(x + 1) :-> nxt]@2 ** lsegNS(nxt, y, len1, s1)[0,1,2] }
}
