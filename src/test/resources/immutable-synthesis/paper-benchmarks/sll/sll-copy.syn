should be able to synthesize list copy

#####

{true ; r :-> x ** sll(x, s)[imm, imm, imm]}
void sll_copy(loc r)
{true ; r :-> y ** sll(x, s)[abs, abs, abs] ** sll(y, s)[mut, mut, mut] }

#####

void sll_copy (loc r) {
  let x2 = *r;
  if (x2 == 0) {
  } else {
    let v2 = *x2;
    let nxt2 = *(x2 + 1);
    *r = nxt2;
    sll_copy(r);
    let y12 = *r;
    let y2 = malloc(2);
    *(x2 + 1) = y12;
    *r = y2;
    *(y2 + 1) = nxt2;
    *y2 = v2;
  }
}

Successfully synthesised in 665 milliseconds:
Number of backtrackings 27
Lasting successful rule applications: 41
Total successful rule applications: 58
Final size of SMT cache: 80
Number of saved negative results: 11
Number of saved positive results: 41
Number of recalled negative results: 0
Number of recalled positive results: 0
