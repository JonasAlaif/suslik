should be able to synthesize list copy from a pointer to the head

#####

{0 <= n ; [r :-> x]@I@c ** lseg(x, 0, n)[I@a,I@b]}
void list_copy(loc r)
{true ; [r :-> y]@I@c ** lseg(y, 0, n)[M, M] ** lseg(x,0,n)[I@a, I@b] }


#####


{0 <= n ; r :-> x ** lseg(x, 0, n)[I@a, I@b]}
void list_copy(loc r)
{true ; r :-> y ** lseg(y, 0, n)[M, M] ** lseg(x,0,n)[I@a, I@b] }


{0 <= n ; r :-> x ** lseg(x, 0, n)[I@a, I@b]}
void list_copy(loc r)
{true ; r :-> y ** lseg(y, 0, n)[M, M] ** lseg(x,0,n)[I@a, I@b] }

** lseg(x,0,n)[I@a, I@b]

void list_copy (loc r) {
  let x2 = *r;
  if (x2 == 0) {
  } else {
    let nxt2 = *(x2 + 1);
    *r = nxt2;
    list_copy(r);
    let y12 = *r;
    let y2 = malloc(2);
    *r = y2;
    *(y2 + 1) = y12;
  }
}
