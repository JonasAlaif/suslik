should be able to synthesize tree size from the root pointer

#####


<<<<<<< HEAD
{0 <= n ; r :-> x ** treeN(x, n) }
void tree_size(loc r)
{true ; r :-> n ** treeN(x, n) }
=======
{0 <= n ; r :-> x ** treeN(x, n)[imm, imm, imm, imm] }
void tree_size(loc r)
{true ; r :-> n ** treeN(x, n)[abs, abs, abs, abs] }
>>>>>>> 6551f85... Changes to tests

#####

void tree_size (loc r) {
  let x2 = *r;
  if (x2 == 0) {
  } else {
    let l2 = *(x2 + 1);
    let r12 = *(x2 + 2);
    *r = l2;
    tree_size(r);
    let n12 = *r;
    *x2 = r12;
    tree_size(x2);
    let n22 = *x2;
    *(x2 + 1) = r12;
    *(x2 + 2) = l2;
    *r = 1 + n12 + n22;
  }
}