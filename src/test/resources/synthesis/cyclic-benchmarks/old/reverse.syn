# -x true -c 2 -p true

reverse a list

#####

{ 0 <= n ; r :-> 0 ** srtl(x, n, lo, hi) }
void reverse (loc x, loc r)
{ true ; r :-> y ** descl(y, n, lo, hi) }

#####

{0 <= n ; r :-> 0 ** srtl(x, n, lo, hi)<_alpha_516>}
{r :-> y ** descl(y, n, lo, hi)<_alpha_517>}
void reverse (loc x, loc r) {
  if (x == 0) {
  } else {
    let v = *x;
    let n = *(x + 1);
    reverse(n, r);
    reverse118(n, v, x, r);
  }
}

{0 <= 1 + len1x && 0 <= hi1x && 0 <= len1x && 0 <= lo1x && 0 <= vx2 && _alpha_514x < _alpha_516 && hi1x <= 7 && lo1x <= 7 && not (r == 0) && not (r == x) && not (x == 0) && vx2 <= 7 && vx2 <= lo1x ; (x + 1) :-> nxtx2 ** r :-> y1 ** x :-> vx2 ** descl(y1, len1x, lo1x, hi1x)<_alpha_5171>[1,0] ** [x, 2]}
{not (r == 0) ; r :-> y ** descl(y, 1 + len1x, vx2 <= lo1x ? vx2 : lo1x, hi1x <= vx2 ? vx2 : hi1x)<_alpha_517>}
void reverse118 (loc nxtx2, int vx2, loc x, loc r) {
  let y1 = *r;
  if (y1 == 0) {
    *(x + 1) = 0;
    *r = x;
  } else {
    let v = *y1;
    let n = *(y1 + 1);
    *r = n;
    *(y1 + 1) = nxtx2;
    *y1 = vx2;
    reverse118(nxtx2, vx2, y1, r);
    let y = *r;
    *(x + 1) = y;
    *r = x;
    *x = v;
  }
}


