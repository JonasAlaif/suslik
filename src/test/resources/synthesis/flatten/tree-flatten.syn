should be able to flatten the tree into a list given an auxiliary function for list appending

####

{ true ; z :-> x ** tree(x, s)}
void tree_flatten(loc z)
{ true ;  z :-> y ** lseg(y, 0, s)}

####

void tree_flatten (loc z) {
  let x2 = *z;
  if (x2 == 0) {
  } else {
    let v2 = *x2;
    let l2 = *(x2 + 1);
    let r2 = *(x2 + 2);
    *x2 = l2;
    tree_flatten(x2);
    *z = r2;
    tree_flatten(z);
    let y22 = *z;
    list_append(x2, y22);
    let z12 = *x2;
    let y3 = malloc(2);
    free(x2);
    *z = y3;
    *(y3 + 1) = z12;
    *y3 = v2;
  }
}