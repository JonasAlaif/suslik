predicate sll(loc x, int len, set s, perm p, perm n, perm a) {
|  x == 0        => { len == 0 && s == {} ; emp }
|  not (x == 0)  => { len == 1 + len1 && s == {v} ++ s1 ;
                      [x, 2]@a ** x :->@p v ** (x + 1) :->@n nxt ** sll(nxt, len1, s1, p, n, a) }
}

predicate multilist(loc x, int size, set s, perm mn, perm ma, perm p, perm n, perm a) {
|  x == 0        => { size == 0 && s == {} ; emp }
|  not (x == 0)  => { size == len1 + size2 && s == s1 ++ s2 ;
                      [x, 2]@ma ** x :->@mn h ** (x + 1) :->@mn t
                      ** sll(h, len1, s1, p, n, a) ** multilist(t, size2, s2, mn, ma, p, n, a) }

}